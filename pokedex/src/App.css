* {
  text-align: center;
  margin-top: 0.5em;
  font-family: 'Open Sans';       /* will change but looks nice for now.  */
} 

/* Home Nav & Main Screen */
.Home-Body {
  text-align: center;
  background-color: peachpuff;
  min-height: 100vh;
  min-width: 100vh;
}
  
.Column-Center {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}

.Row-Center {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
}

.Column-Between {
  overflow-y: scroll;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
}

.navBall {
  height: 85px;
  width: 85px;
  border-radius: 50%;
  /* padding: 0 3em 0 3em;
  margin: 0 3em 0 3em; */
  opacity: 1.0;
}

.Ghost {
  /* background-color: black; */
  height: 85px;
  width: 85px;
  border-radius: 50%;
  opacity: 1.0;
  background-size: cover;
  background-repeat: no-repeat;
  /* padding: 0 3em 0 3em;
  margin: 0 3em 0 3em; */
}

#Pokeball {
  background-image: url("/public/img/pokeball.png");
  background-size: cover;
  background-repeat: no-repeat;
}

#Greatball {
  background-image: url("/public/img/greatball.png");
  background-size: cover;
  background-repeat: no-repeat;
}

#Ultraball {
  background-image: url("/public/img/ultraball.png");
  background-size: cover;
  background-repeat: no-repeat;
}

/* SCREEN */
.Screen {  
  padding: 4em 0 4em 0;
  overflow-y: scroll;
  /* overflow: hidden; */
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
  /* line-height: 2.5em; */
  height: 40em;
  width: 40em;
  background-image: url('/public/img/pokedexScreen.png');
  background-size: cover;
  background-repeat: no-repeat;
}

.Poke-Card {
  list-style-type: none;  
}

.Poke-Card-Image {
  height: 85px;
  width: 85px;
}

.Pokedex {
  height: 400px;
  width: 400px;
}

.Close-Pokedex {
  background: url("/public/img/closePokeDex.png") no-repeat;
  border-radius: 50%;
}
.Open-Pokedex {
  background: url("/public/img/openPokeDex.png") no-repeat;
  border-radius: 50%;
  box-shadow: 2px 2px 2px black;
}

.Pokedex-Animate {
  animation: flickFade 4s;
  border: 5px solid whitesmoke;
}

.Header-Container {
  margin-top: 1.5em;
  height: 2em;
  width: 30%;
  border: rgb(151, 135, 135);
}

.Hidden-Input-Container {
  height: 300px;
  /* height: 20em; */
  margin: 0px;
}

.Bootstrap-Screen-Btn {
  background-image: url("/public/img/pokeball.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-color: transparent;
  border-color: transparent;
  pointer-events: none;
}

.Invisible-P {
  color: transparent;
}

/* glad only took 2 seconds but feels silly to try putting elem:hover when there  */
.Bootstrap-Screen-Btn:hover {
  
}



.Map-Parent {
  height: 400px;
  width: 400px;
  background-image: url("/public/img/pokemontemplate.png");
  margin-top: 500px;
}

#Render-Ul {
  /* border: 5px solid maroon; */
  margin-top: 5em;
}

.Sprite {
  height: 85px;
  width: 85px;
}

.Carousel-Item {
  transform: scale(2.0);
  height: 100px;
  width: 100px;
  /* background-color: maroon; */
}

#Screen-Input {
  margin-top: -2em;
  border: 5px solid whitesmoke;
}

.Double-Size { transform: scale(2.0);}
.Half-Size { transform: scale(0.5);}
.Quarter-Size { transform: scale(0.25);}
.Tenth-Size { transform: scale(0.1)}


/* SCREEN */



/* KEYFRAMES && ANIMATIONS */
@keyframes flickFade {
  0% {
    opacity: 1.0;
  }
  20% {
    opacity: 0.9;
    opacity: 0.2;
    border: 5px solid ;
    opacity: 0.8;
  }
  40% {
    opacity: 0.7;
    border: 10px solid hsl(11, 96%, 50%/1.0);
    border: 10px solid whitesmoke;
    border: 10px solid hsl(11, 96%, 50%/1.0);
  }
  60% {
    opacity: 0.5;
    border: 3px dotted rgb(244, 21, 21);
  }
  80% {
    opacity: 0.2;
    border: 
  }
  100% {
    opacity: 0.0
  }
}

#Screen-Input {
  margin-top: 2em;
}

.Pokedex-Float {
  animation: Float 4s;
  animation-iteration-count: infinite;
}

@keyframes Float {
  0% {
    /* position: relative; */
    transform: skewY(-5deg)
  }
  10% {
    position: relative;
    transform: skewY(+5deg)
    
  }
  20% {
    position: relative;
    
  }
  30% {
    position: relative;
    
  }
  40% {
    position: relative;
    
  }
  50% {
    position: relative;
    
  }
  60% {
    position: relative;

  }
  70% {
    position: relative;

  }
  80% {
    position: relative;

  }
  90% {
    position: relative;

  }
  100% {
    position: relative;

  }
}


/* considering doing this animation on [Bootstrap.js] side because of jquerys .animate().complete() The complete function that allows you to set the end state for when the animation is complete.   */
/* If the clickBehavior is saving the pokemon to the database i'd like the element to have some kind of indication that you wouldn't be clicking it again.  */
/* You could also: setTimeout(makePokeBallOpacity0.1(), 5000) a timeout of 5000 would apply the pokeball.css('opacity', 0.1') in 5 seconds while this animation takes "Gentle-Rotate 4seconds'
(slight paradox) this would be a manually performed lazyComplete()
*/ 
.Pokeball-Animate {
animation: Gentle-Rotate 4s; 
animation-iteration-count: 1
}

@keyframes Gentle-Rotate {
  0% {
    transform: rotate()
  }
  20% {
    transform: rotate(-9deg);
  }
  40% {
    transform: rotate(18deg)
  }
  43% {
    transform: rotate(0deg)
  }
  46% {
    transform: rotate(-3deg)
  }
  49% {
    transform: rotate(3deg)
  }
  65% {
    transform: rotate(-3deg)
  }
  80% {
    transform: rotate(5deg)
  }
  
  100% {
    transform: rotate(0)

  }
}
