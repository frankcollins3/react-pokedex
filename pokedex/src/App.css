

* {
  text-align: center;
  font-family: 'Open Sans';       /* will change but looks nice for now.  */
  /* overflow: hidden; */
}
 
/* Home Nav & Main Screen */
.Home-Body {
  overflow: hidden;
  text-align: center;
  background-color: peachpuff;
  min-height: 100vh; 
  min-width: 100vh; 
}

.Main-Wrap {
  overflow-y: hidden;
  /* border: 3px solid brown; */
}
  
.Column-Center {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}

.Row-Center {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
}

.Row-Between {
  width: 50vw;  
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: space-between;
}

.Column-Between {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
}

#Nine-By-Nine {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}

.navBall {
  position: relative;  
  height: 85px;
  width: 85px;
  border-radius: 50%;
  margin: 0 3em 0 3em; 
  opacity: 1.0;
}

.ghostbtn {
  position: relative;
  background-color: transparent;
  border: transparent;
  height: 85px;
  width: 85px;
  border-radius: 50%;
  background-size: cover;
  background-repeat: no-repeat;  
}

#Pokeball {
  background-image: url("/public/img/pokeball.png");
  background-size: cover;
  background-repeat: no-repeat;
}

#Greatball {
  background-image: url("/public/img/greatball.png");
  background-size: cover;
  background-repeat: no-repeat;
}

#Ultraball {
  background-image: url("/public/img/ultraball.png");
  background-size: cover;
  background-repeat: no-repeat;
  border: transparent;
  
}

.BackPack {
  background-image: url("/public/img/bag.png");
  background-size: cover;
  background-repeat: no-repeat;
}


/* SCREEN */
.Screen {  
  /* padding: 4em 0 4em 0; */
  
  overflow-y: scroll;
  /* overflow: hidden; */
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
  /* line-height: 2.5em; */
  height: 40em;
  width: 40em;
  background-image: url('/public/img/pokedexScreen.png');
  background-size: cover;
  background-repeat: no-repeat;
}

.Second-Half {
  /* border: 5px solid orange; */
  padding: 0;
}

.Poke-Card {
  list-style-type: none;  
}

.Poke-Card-Img {
  margin-top: -2em;
  height: 185px;
  width: 185px;
}

.Poke-Bar {  
  margin-top: 1em;
}

.Poke-Bar-Pokemon {
  list-style-type: none;
  /* margin: 0 1em 0 1em; */
}

.Pokedex {
  height: 400px;
  width: 400px;
}

.Close-Pokedex {
  background: url("/public/img/closePokeDex.png") no-repeat;
  border-radius: 50%;
}
.Open-Pokedex {
  background: url("/public/img/openPokeDex.png") no-repeat;
  border-radius: 50%;
  box-shadow: 2px 2px 2px black;
}

.Pokedex-Animate {
  animation: flickFade 4s;
  border: 5px solid whitesmoke;
}

.Header-Container {
  margin-top: 1.5em;
  height: 5em;
  width: 30%;
  border: rgb(151, 135, 135);
}

.Hidden-Input-Container {
  height: 300px;
  margin: 0px;
}

.Bootstrap-Screen-Btn {
   margin-top: -1.25em; 
   background-image: url("/public/img/pokeball.png"); 
  background-size: cover;
  background-repeat: no-repeat;
  background-color: transparent;
  border-color: transparent;
  pointer-events: none; 
}

.Invisible-P {
  margin-top: 3em;  
  text-align: center;
  color: transparent;
}

.Map-Parent {
  height: 400px;
  width: 400px;
  background-image: url("/public/img/pokemontemplate.png");
  margin-top: 500px;
}

.Haunter {
  height: 400px;
  width: 400px;
  background-image: url("/public/img/haunter.png");
  background-size: cover;
  background-repeat: no-repeat;
  margin-top: 500px;
 }

#Render-Ul {  
  margin-top: 5em;
}

.Sprite {
  height: 85px;
  width: 85px;
  background-size: cover;
  background-repeat: no-repeat;
}
.Big-Sprite {
  height: 350px;
  width: 350px;
}

.Mouse-Icon {
  margin-top: -1.25em;
}

.Name-Tag {
  font-size: 24px;
  position: relative;
  top: 90px;
}

.Carousel-Item {
  transform: scale(2.0);
  height: 100px;
  width: 100px;
  /* background-color: maroon; */
}

#Screen-Input {
  margin-top: -2em;
  border: 5px solid whitesmoke;
}

.Quadruple { transform: scale(4.0);}
.Triple-Stack { transform: scale(3.0);}
.Double-Size { transform: scale(2.0);}
.Half-Size { transform: scale(0.5);}
.Quarter-Size { transform: scale(0.25);}
.Tenth-Size { transform: scale(0.1);}
.Invisible { display: none;}

/* @media (max-width: 1200px) { */
  /* .Home-Body { */
    /* background-color: purple; */
  /* } */
/* } */


/* SCREEN */




/* KEYFRAMES && ANIMATIONS */
@keyframes flickFade {
  0% {
    opacity: 1.0;
  }
  20% {
    opacity: 0.9;
    opacity: 0.2;
    border: 5px solid ;
    opacity: 0.8;
  }
  40% {
    opacity: 0.7;
    border: 10px solid hsl(11, 96%, 50%/1.0);
    border: 10px solid whitesmoke;
    border: 10px solid hsl(11, 96%, 50%/1.0);
  }
  60% {
    opacity: 0.5;
    border: 3px dotted rgb(244, 21, 21);
  }
  80% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.0;
  }
}
#Screen-Input {
  margin-top: 2em;
}
.Pokedex-Float {
  animation: Float 4s;
  animation-iteration-count: infinite;
}

@keyframes Float {
  0% {    
    transform: skewY(-5deg);
  }
  10% {
    position: relative;
    transform: skewY(+5deg);
  }
  20% {
    position: relative;
  }
  30% {
    position: relative;
  }
  40% {
    position: relative;
  }
  50% {
    position: relative;
  }
  60% {
    position: relative;
  }
  70% {
    position: relative;
  }
  80% {
    position: relative;
  }
  90% {
    position: relative;
  }
  100% {
    position: relative;
  }
}
/* considering doing this animation on [Bootstrap.js] side because of jquerys .animate().complete() The complete function that allows you to set the end state for when the animation is complete.   */
/* If the clickBehavior is saving the pokemon to the database i'd like the element to have some kind of indication that you wouldn't be clicking it again.  */
/* You could also: setTimeout(makePokeBallOpacity0.1(), 5000) a timeout of 5000 would apply the pokeball.css('opacity', 0.1') in 5 seconds while this animation takes "Gentle-Rotate 4seconds'
(slight paradox) this would be a manually performed lazyComplete()
*/ 
.Pokedex-Text {
  text-align: center;
  font-size: 12px;
  font-weight: bold;
  position: relative;
  top: 1em;
}

.Pokeball-Animate {
animation: Gentle-Rotate 4s; 
animation-iteration-count: 1;
}

@keyframes Gentle-Rotate {
  0% {
    transform: rotate();
  }
  20% {
    transform: rotate(-9deg);
  }
  40% {
    transform: rotate(18deg);
  }
  43% {
    transform: rotate(0deg);
  }
  46% {
    transform: rotate(-3deg);
  }
  49% {
    transform: rotate(3deg);
  }
  65% {
    transform: rotate(-3deg);
  }
  80% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(0);
  }
}

/* **** TypeScreen / Page2 / Greatball Click */
.Type-Wrap {
  height: 100vh;
  width: 100vw;  
  background-image: url("/public/img/noScreenPokedex.jpeg");
  background-repeat: no-repeat;
  background-size: cover;
}


.Real-Screen {
  overflow-x: scroll;
    background-image: url('/public/img/nicePokedex.png');
    background-size: cover;
    background-repeat: no-repeat;
    border: 1.5px solid rgb(61, 46, 61);
    box-shadow: 1px 1px 1px rgb(61, 46, 61);
    padding-top: 3%;    
}

.Screen-Parents {
  width: 300px;
  overflow: scroll;
  height: 100px;
  box-shadow: 4px 4px 4px lightcyan;
}

.Real-Screen-P {
  width: 30%;
  background-size: cover;
  background-repeat: no-repeat;
}

.Type-Bar {
  margin-top: 1em;
  height: 170px;
  width: 800px;
}

.Circle {  
    overflow: hidden;  
    display: flex;
    top: 0; left  : 0;     
    border: 1.5px solid rgb(61, 46, 61);
    box-shadow: 1.5px 1.5px 1.5px rgb(19, 14, 19);    
    border-radius: 50%;    
    margin-top: 2%;
    background-size: cover;    
}
/* **** ____________ end of page 2 */


/* ? PAGE 3 !!!!  */

.Info-Image-Container {
  height: 50vh;
  width: 20vw;
  background-image: url('/public/img/whiteCard.jpg');
  background-size: cover;
  background-repeat: no-repeat;
}

.Endpoint-Container {
  height: 50vh;
  width: 20vw;
  background-image: url('/public/img/whiteCard.jpg');
  background-size: cover;
  background-repeat: no-repeat;
}

/* .Info-Endpoint-Bar {
} */

.Bg-Btn {
  margin: 0.5em 1em 0 1em;
  height: 50px;
  width: 50px;
  border: none;
  background-color: transparent;
  background-size: cover;
  background-repeat: no-repeat;
}

#Diamond {  
  background-image: url('/public/img/diamond.png');
}

#Mirror {  
  background-image: url('/public/img/mirror.png');  
}

.Header-Text {
  font-weight: bold;
  font-size: '14px';
  color: rgba(138, 141, 138, 0.708);
}

.Endpoint-Text {
  margin-top: 0.25em;
  font-size: 28px;
  font-weight: bold;
  letter-spacing: 0.175em;
  font-family: 'Vollkorn SC', serif, lobster; 
}

#moves {
  background-image: url('/public/img/moves.png');
}
#ability {
  background-image: url('/public/img/ability.png');
}
#damage {
  background-image: url('/public/img/damage.png');
}
#Info-Pokeball {
  background-image: url('/public/img/pokeball.png');
}
#Gear {
  background-image: url('/public/img/gear.png');
}

.Display-Poke {
  width: 45%;
  color: transparent;
  background-size: cover;
  background-repeat: no-repeat;
}

/* ? ****** ______________ end of page 3   */



/* *** Captcha  */
/* .Captcha-Cont {
} */

.Captcha-Box {
  height: 250px;
  width: 250px;
  background-image: url('/public/img/openPokeBall.png');
  background-size: 1000%;
  margin: 0.25em;
}

.Captcha-P {
  font-size: 55px;
  color: white;
}

.Captcha-Text {
  color: #C4C4C4;
  font-size: 18px;
  letter-spacing: 0.125em;
}

#Gear {
  background-image: url('/public/img/gear.png');
  background-size: cover;
  background-repeat: no-repeat;
  height: 150px;
  width: 150px;
  position: relative;
  top: -1em;
}

.tailWhip {
  animation: swift 5s infinite;
}
@keyframes swift { 
  0% {
  }
  25% {
  transform: rotate(45deg);
}
  50% {
  transform: rotate(90deg);
}
  60% {
  transform: rotate(135deg);
  }
  80% {
  transform: rotate(180deg);
  }
  100% {
    transform: rotate (360deg);
  }
}

.rotateAnimation1 {
  animation: ball1 4s 1;
}

@keyframes ball1 {
  0%, 100% {
    transform: rotate(0deg);
  }
  20% {
    transform: rotate(2deg);
  }
  40% {
    transform: rotate(-2deg);
  }
  60% {
    transform: rotate(4deg);
  }
  65% {
    transform: rotate(-3deg);
  }
  70% {
    transform: rotate(2deg);
  }
  80% {
    transform: rotate(-1deg);
  } 
}

#NightModeBtn {  
  background-image: url('/public/img/nightmode.png');
  background-size: cover;
  background-repeat: no-repeat;
  border: transparent;
  border-radius: 50%;
}

/* #signInDiv {    
} */

#secretSignIn {
  height: 2rem;
  width: 2rem;
  background-image: url('/public/img/google.png');
  background-size: cover;
  background-repeat: no-repeat;
}
/* *** Captcha  */
